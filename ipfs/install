#!/usr/bin/env bash
# shellcheck disable=SC1091

set -e

GO_IPFS_VERSION="v0.4.22"

ARCH="$(uname -m)" 
case "$ARCH" in
  x86_64)
    ARCH="amd64"
  ;;
  i386 | i586 | i686 )
    ARCH="386"
  ;;  armv7l)
    ARCH="arm";
  ;;
  armv6l)
    ARCH="arm";
  ;;
  aarch64)
    ARCH="arm64";
  ;;
  *)
    echo "Unknown Arch"
    exit 1
  ;;
esac

BASE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Download and install IPFS
mkdir "$BASE_DIR/tmp"
wget "https://dist.ipfs.io/go-ipfs/${GO_IPFS_VERSION}/go-ipfs_${GO_IPFS_VERSION}_linux-${ARCH}.tar.gz" -O "$BASE_DIR/tmp/go-ipfs.tar.gz"
tar xvfz "$BASE_DIR/tmp/go-ipfs.tar.gz" -C "$BASE_DIR/tmp"
sudo cp "$BASE_DIR/tmp/go-ipfs/ipfs" /usr/local/bin/ipfs
sudo chown root:staff /usr/local/bin/ipfs
rm -rf "$BASE_DIR/tmp"

# Initialize IPFS if not already
if [ ! -d "$HOME/.ipfs" ]; then  
  ipfs init || true
fi

# Enable gossipsub routing
ipfs config Pubsub.Router gossipsub

# Enable Filestore for --nocopy capability
ipfs config --bool Experimental.FilestoreEnabled true

# Setup connection management - Reduce connections to stress the Pi less
# XXX: These values need to be tweaked and tested
ipfs config Swarm.ConnMgr.Type basic
ipfs config --json Swarm.ConnMgr.LowWater 100
ipfs config --json Swarm.ConnMgr.HighWater 200
ipfs config Swarm.ConnMgr.GracePeriod 60s

# Enable QUIC for better connections when possible
ipfs config --bool Experimental.QUIC true

# Configure systemd to start ipfs.service on system boot
sudo cp "$BASE_DIR/ipfs.service" /etc/systemd/system/ipfs.service
sudo sed -i "s|__USER_HOME__|${HOME}|" /etc/systemd/system/ipfs.service
sudo systemctl daemon-reload
sudo systemctl enable ipfs.service
sudo systemctl start ipfs.service
